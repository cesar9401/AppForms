
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.cesar31.formsweb.parser.main;

import com.cesar31.formsweb.parser.main.FormsLex;
import com.cesar31.formsweb.control.*;
import com.cesar31.formsweb.model.*;
import java_cup.runtime.Symbol;
import java.util.ArrayList;
import java.util.List;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class FormsParser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return FormsParserSym.class;
}

  /** Default constructor. */
  @Deprecated
  public FormsParser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public FormsParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public FormsParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\350\000\002\002\003\000\002\002\004\000\002\002" +
    "\005\000\002\011\006\000\002\011\006\000\002\011\006" +
    "\000\002\011\006\000\002\011\006\000\002\012\006\000" +
    "\002\012\006\000\002\012\006\000\002\012\006\000\002" +
    "\012\006\000\002\005\003\000\002\005\004\000\002\003" +
    "\007\000\002\003\007\000\002\003\007\000\002\003\007" +
    "\000\002\003\007\000\002\006\005\000\002\006\005\000" +
    "\002\006\005\000\002\006\005\000\002\006\005\000\002" +
    "\006\005\000\002\006\005\000\002\006\005\000\002\006" +
    "\005\000\002\006\005\000\002\006\005\000\002\006\005" +
    "\000\002\006\005\000\002\006\005\000\002\006\005\000" +
    "\002\006\005\000\002\006\005\000\002\006\005\000\002" +
    "\006\005\000\002\006\005\000\002\006\005\000\002\006" +
    "\005\000\002\006\005\000\002\007\007\000\002\007\007" +
    "\000\002\007\007\000\002\007\007\000\002\007\007\000" +
    "\002\024\007\000\002\024\007\000\002\024\007\000\002" +
    "\024\007\000\002\045\007\000\002\045\007\000\002\045" +
    "\007\000\002\045\007\000\002\013\005\000\002\013\005" +
    "\000\002\013\005\000\002\014\005\000\002\014\005\000" +
    "\002\014\005\000\002\015\005\000\002\015\005\000\002" +
    "\015\005\000\002\016\003\000\002\016\003\000\002\016" +
    "\003\000\002\016\003\000\002\016\003\000\002\016\003" +
    "\000\002\016\003\000\002\016\003\000\002\016\003\000" +
    "\002\016\003\000\002\016\003\000\002\016\003\000\002" +
    "\016\003\000\002\016\003\000\002\016\003\000\002\016" +
    "\003\000\002\016\003\000\002\016\003\000\002\016\003" +
    "\000\002\016\003\000\002\016\003\000\002\016\003\000" +
    "\002\016\003\000\002\016\003\000\002\017\003\000\002" +
    "\017\005\000\002\010\010\000\002\010\010\000\002\010" +
    "\010\000\002\010\010\000\002\010\010\000\002\025\005" +
    "\000\002\025\005\000\002\025\005\000\002\026\005\000" +
    "\002\026\005\000\002\026\005\000\002\027\005\000\002" +
    "\027\005\000\002\027\005\000\002\030\005\000\002\030" +
    "\005\000\002\030\005\000\002\031\005\000\002\031\005" +
    "\000\002\031\005\000\002\032\005\000\002\032\005\000" +
    "\002\032\005\000\002\033\005\000\002\033\005\000\002" +
    "\033\005\000\002\034\005\000\002\034\005\000\002\034" +
    "\005\000\002\035\005\000\002\035\005\000\002\035\005" +
    "\000\002\036\005\000\002\036\005\000\002\036\005\000" +
    "\002\041\005\000\002\041\005\000\002\041\005\000\002" +
    "\042\005\000\002\042\005\000\002\042\005\000\002\037" +
    "\005\000\002\037\005\000\002\037\005\000\002\043\005" +
    "\000\002\043\005\000\002\043\005\000\002\044\005\000" +
    "\002\044\005\000\002\044\005\000\002\040\005\000\002" +
    "\040\005\000\002\040\005\000\002\020\005\000\002\020" +
    "\005\000\002\020\005\000\002\021\005\000\002\021\005" +
    "\000\002\021\005\000\002\022\005\000\002\022\005\000" +
    "\002\022\005\000\002\023\005\000\002\023\005\000\002" +
    "\023\005\000\002\004\006\000\002\004\006\000\002\004" +
    "\006\000\002\004\006\000\002\004\006\000\002\046\003" +
    "\000\002\046\003\000\002\046\003\000\002\046\003\000" +
    "\002\046\003\000\002\046\003\000\002\046\003\000\002" +
    "\046\003\000\002\046\003\000\002\046\003\000\002\046" +
    "\003\000\002\046\003\000\002\046\003\000\002\046\003" +
    "\000\002\046\003\000\002\046\003\000\002\046\003\000" +
    "\002\046\003\000\002\046\003\000\002\046\003\000\002" +
    "\046\003\000\002\046\003\000\002\046\003\000\002\046" +
    "\003\000\002\046\003\000\002\046\003\000\002\046\003" +
    "\000\002\046\003\000\002\046\003\000\002\046\003\000" +
    "\002\046\003\000\002\046\003\000\002\046\003\000\002" +
    "\046\003\000\002\046\003\000\002\046\003\000\002\046" +
    "\003\000\002\046\003\000\002\046\003\000\002\046\003" +
    "\000\002\046\003\000\002\046\003\000\002\046\003\000" +
    "\002\046\003\000\002\046\003\000\002\046\003\000\002" +
    "\046\003\000\002\046\003\000\002\046\003\000\002\046" +
    "\003\000\002\046\003\000\002\046\003\000\002\046\003" +
    "\000\002\046\003\000\002\046\003\000\002\047\003\000" +
    "\002\047\003\000\002\047\003\000\002\047\003\000\002" +
    "\047\003\000\002\047\003\000\002\047\003\000\002\047" +
    "\003\000\002\050\003\000\002\050\003\000\002\050\003" +
    "\000\002\050\003\000\002\051\003\000\002\051\003\000" +
    "\002\052\003\000\002\052\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u01b1\000\006\003\006\013\007\001\002\000\004\002" +
    "\u01b3\001\002\000\006\003\u019b\013\u019d\001\002\000\004" +
    "\022\u0195\001\002\000\006\003\011\022\012\001\002\000" +
    "\004\002\001\001\002\000\006\004\u0190\006\u0191\001\002" +
    "\000\010\003\015\004\013\006\014\001\002\000\006\003" +
    "\u018c\012\u018d\001\002\000\006\003\u018b\014\u018a\001\002" +
    "\000\006\012\017\014\016\001\002\000\006\003\ufffb\013" +
    "\ufffb\001\002\000\030\003\030\040\033\043\020\044\026" +
    "\045\025\054\032\062\023\063\031\064\021\111\027\112" +
    "\022\001\002\000\006\003\u0187\014\u0186\001\002\000\006" +
    "\003\u0183\014\u0182\001\002\000\006\003\u017f\014\u017e\001" +
    "\002\000\006\003\u017a\014\u017b\001\002\000\010\002\uffef" +
    "\003\uffef\013\uffef\001\002\000\006\003\u0176\014\u0177\001" +
    "\002\000\006\003\u0173\014\u0172\001\002\000\006\003\u016d" +
    "\014\u016c\001\002\000\004\014\u0159\001\002\000\006\003" +
    "\u0156\014\u0155\001\002\000\006\003\u0142\014\u0143\001\002" +
    "\000\006\003\034\014\035\001\002\000\006\003\040\015" +
    "\037\001\002\000\006\003\040\015\037\001\002\000\010" +
    "\002\uffed\003\uffed\013\uffed\001\002\000\006\003\u0135\041" +
    "\u0134\001\002\000\004\041\041\001\002\000\004\012\042" +
    "\001\002\000\004\017\043\001\002\000\006\003\046\015" +
    "\045\001\002\000\010\002\uffd5\003\uffd5\013\uffd5\001\002" +
    "\000\062\003\100\042\077\046\067\047\054\050\103\051" +
    "\101\052\126\053\066\056\076\057\117\060\111\061\120" +
    "\066\075\067\050\070\072\101\116\102\123\103\127\104" +
    "\071\105\064\106\060\107\121\110\104\114\062\001\002" +
    "\000\062\003\100\042\077\046\067\047\054\050\103\051" +
    "\101\052\126\053\066\056\076\057\117\060\111\061\120" +
    "\066\075\067\050\070\072\101\116\102\123\103\127\104" +
    "\071\105\064\106\060\107\121\110\104\114\062\001\002" +
    "\000\010\003\uffbf\016\uffbf\021\uffbf\001\002\000\006\003" +
    "\u0121\012\u0122\001\002\000\010\003\uffba\016\uffba\021\uffba" +
    "\001\002\000\010\003\uffaf\016\uffaf\021\uffaf\001\002\000" +
    "\004\016\u010f\001\002\000\006\003\u010a\012\u010b\001\002" +
    "\000\010\003\uffaa\016\uffaa\021\uffaa\001\002\000\010\003" +
    "\uffb5\016\uffb5\021\uffb5\001\002\000\010\003\uffbd\016\uffbd" +
    "\021\uffbd\001\002\000\006\003\u0105\012\u0106\001\002\000" +
    "\010\003\uffab\016\uffab\021\uffab\001\002\000\006\003\u0100" +
    "\012\u0101\001\002\000\010\003\uffb7\016\uffb7\021\uffb7\001" +
    "\002\000\006\003\373\012\374\001\002\000\010\003\uffbc" +
    "\016\uffbc\021\uffbc\001\002\000\006\003\366\012\367\001" +
    "\002\000\006\003\361\012\362\001\002\000\010\003\uffad" +
    "\016\uffad\021\uffad\001\002\000\006\003\352\012\353\001" +
    "\002\000\006\003\335\012\336\001\002\000\010\003\uffb4" +
    "\016\uffb4\021\uffb4\001\002\000\010\003\uffbb\016\uffbb\021" +
    "\uffbb\001\002\000\006\003\330\012\331\001\002\000\006" +
    "\003\323\012\324\001\002\000\006\003\316\012\317\001" +
    "\002\000\010\003\uffa9\016\uffa9\021\uffa9\001\002\000\006" +
    "\003\311\012\312\001\002\000\010\003\uffb0\016\uffb0\021" +
    "\uffb0\001\002\000\006\003\304\012\305\001\002\000\006" +
    "\003\277\012\300\001\002\000\010\003\uffc0\016\uffc0\021" +
    "\uffc0\001\002\000\010\003\uffb6\016\uffb6\021\uffb6\001\002" +
    "\000\010\003\uffb8\016\uffb8\021\uffb8\001\002\000\010\003" +
    "\uffb1\016\uffb1\021\uffb1\001\002\000\006\003\272\012\273" +
    "\001\002\000\010\003\uffae\016\uffae\021\uffae\001\002\000" +
    "\010\003\uffb3\016\uffb3\021\uffb3\001\002\000\010\003\uffb9" +
    "\016\uffb9\021\uffb9\001\002\000\010\003\uffa8\016\uffa8\021" +
    "\270\001\002\000\006\003\263\012\264\001\002\000\006" +
    "\003\256\012\257\001\002\000\006\003\247\012\250\001" +
    "\002\000\006\003\242\012\243\001\002\000\010\003\uffb2" +
    "\016\uffb2\021\uffb2\001\002\000\006\003\235\012\236\001" +
    "\002\000\010\003\uffac\016\uffac\021\uffac\001\002\000\010" +
    "\003\uffbe\016\uffbe\021\uffbe\001\002\000\006\003\141\012" +
    "\142\001\002\000\006\003\130\012\131\001\002\000\012" +
    "\115\135\116\132\117\134\120\136\001\002\000\014\003" +
    "\133\115\135\116\132\117\134\120\136\001\002\000\010" +
    "\003\uff20\016\uff20\021\uff20\001\002\000\010\003\uff81\016" +
    "\uff81\021\uff81\001\002\000\010\003\uff1f\016\uff1f\021\uff1f" +
    "\001\002\000\010\003\uff21\016\uff21\021\uff21\001\002\000" +
    "\010\003\uff1e\016\uff1e\021\uff1e\001\002\000\010\003\uff83" +
    "\016\uff83\021\uff83\001\002\000\010\003\uff82\016\uff82\021" +
    "\uff82\001\002\000\160\035\146\037\155\040\153\041\225" +
    "\042\175\043\151\044\206\045\223\046\167\047\145\050" +
    "\201\051\177\052\231\053\166\054\152\055\163\056\173" +
    "\057\216\060\210\061\214\062\220\063\161\064\217\065" +
    "\165\066\172\067\143\070\171\071\160\072\221\073\150" +
    "\074\213\075\222\076\211\077\226\100\147\101\215\102" +
    "\230\103\233\104\170\105\164\106\156\107\224\110\205" +
    "\111\144\112\207\115\204\116\174\117\232\120\203\121" +
    "\162\122\212\123\154\124\157\125\227\126\202\001\002" +
    "\000\162\003\176\035\146\037\155\040\153\041\225\042" +
    "\175\043\151\044\206\045\223\046\167\047\145\050\201" +
    "\051\177\052\231\053\166\054\152\055\163\056\173\057" +
    "\216\060\210\061\214\062\220\063\161\064\217\065\165" +
    "\066\172\067\143\070\171\071\160\072\221\073\150\074" +
    "\213\075\222\076\211\077\226\100\147\101\215\102\230" +
    "\103\233\104\170\105\164\106\156\107\224\110\205\111" +
    "\144\112\207\115\204\116\174\117\232\120\203\121\162" +
    "\122\212\123\154\124\157\125\227\126\202\001\002\000" +
    "\010\003\uff47\016\uff47\021\uff47\001\002\000\010\003\uff35" +
    "\016\uff35\021\uff35\001\002\000\010\003\uff55\016\uff55\021" +
    "\uff55\001\002\000\010\003\uff60\016\uff60\021\uff60\001\002" +
    "\000\010\003\uff3e\016\uff3e\021\uff3e\001\002\000\010\003" +
    "\uff43\016\uff43\021\uff43\001\002\000\010\003\uff59\016\uff59" +
    "\021\uff59\001\002\000\010\003\uff52\016\uff52\021\uff52\001" +
    "\002\000\010\003\uff5e\016\uff5e\021\uff5e\001\002\000\010" +
    "\003\uff2d\016\uff2d\021\uff2d\001\002\000\010\003\uff5f\016" +
    "\uff5f\021\uff5f\001\002\000\010\003\uff38\016\uff38\021\uff38" +
    "\001\002\000\010\003\uff2c\016\uff2c\021\uff2c\001\002\000" +
    "\010\003\uff45\016\uff45\021\uff45\001\002\000\010\003\uff4b" +
    "\016\uff4b\021\uff4b\001\002\000\010\003\uff2f\016\uff2f\021" +
    "\uff2f\001\002\000\010\003\uff51\016\uff51\021\uff51\001\002" +
    "\000\010\003\uff39\016\uff39\021\uff39\001\002\000\010\003" +
    "\uff49\016\uff49\021\uff49\001\002\000\010\003\uff5b\016\uff5b" +
    "\021\uff5b\001\002\000\010\003\uff56\016\uff56\021\uff56\001" +
    "\002\000\010\003\uff3a\016\uff3a\021\uff3a\001\002\000\010" +
    "\003\uff46\016\uff46\021\uff46\001\002\000\010\003\uff48\016" +
    "\uff48\021\uff48\001\002\000\010\003\uff50\016\uff50\021\uff50" +
    "\001\002\000\010\003\uff32\016\uff32\021\uff32\001\002\000" +
    "\010\003\uff5a\016\uff5a\021\uff5a\001\002\000\010\003\uffc7" +
    "\016\uffc7\021\uffc7\001\002\000\010\003\uff53\016\uff53\021" +
    "\uff53\001\002\000\010\003\uffc9\016\uffc9\021\uffc9\001\002" +
    "\000\010\003\uff54\016\uff54\021\uff54\001\002\000\010\003" +
    "\uff2a\016\uff2a\021\uff2a\001\002\000\010\003\uff30\016\uff30" +
    "\021\uff30\001\002\000\010\003\uff33\016\uff33\021\uff33\001" +
    "\002\000\010\003\uff36\016\uff36\021\uff36\001\002\000\010" +
    "\003\uff58\016\uff58\021\uff58\001\002\000\010\003\uff34\016" +
    "\uff34\021\uff34\001\002\000\010\003\uff4e\016\uff4e\021\uff4e" +
    "\001\002\000\010\003\uff40\016\uff40\021\uff40\001\002\000" +
    "\010\003\uff2e\016\uff2e\021\uff2e\001\002\000\010\003\uff42" +
    "\016\uff42\021\uff42\001\002\000\010\003\uff4d\016\uff4d\021" +
    "\uff4d\001\002\000\010\003\uff3d\016\uff3d\021\uff3d\001\002" +
    "\000\010\003\uff4f\016\uff4f\021\uff4f\001\002\000\010\003" +
    "\uff4a\016\uff4a\021\uff4a\001\002\000\010\003\uff4c\016\uff4c" +
    "\021\uff4c\001\002\000\010\003\uff44\016\uff44\021\uff44\001" +
    "\002\000\010\003\uff41\016\uff41\021\uff41\001\002\000\010" +
    "\003\uff57\016\uff57\021\uff57\001\002\000\010\003\uff37\016" +
    "\uff37\021\uff37\001\002\000\010\003\uff5d\016\uff5d\021\uff5d" +
    "\001\002\000\010\003\uff3f\016\uff3f\021\uff3f\001\002\000" +
    "\010\003\uff2b\016\uff2b\021\uff2b\001\002\000\010\003\uff3c" +
    "\016\uff3c\021\uff3c\001\002\000\010\003\uff5c\016\uff5c\021" +
    "\uff5c\001\002\000\010\003\uff31\016\uff31\021\uff31\001\002" +
    "\000\010\003\uff3b\016\uff3b\021\uff3b\001\002\000\010\003" +
    "\uffc8\016\uffc8\021\uffc8\001\002\000\160\035\146\037\155" +
    "\040\153\041\225\042\175\043\151\044\206\045\223\046" +
    "\167\047\145\050\201\051\177\052\231\053\166\054\152" +
    "\055\163\056\173\057\216\060\210\061\214\062\220\063" +
    "\161\064\217\065\165\066\172\067\143\070\171\071\160" +
    "\072\221\073\150\074\213\075\222\076\211\077\226\100" +
    "\147\101\215\102\230\103\233\104\170\105\164\106\156" +
    "\107\224\110\205\111\144\112\207\115\204\116\174\117" +
    "\232\120\203\121\162\122\212\123\154\124\157\125\227" +
    "\126\202\001\002\000\162\003\237\035\146\037\155\040" +
    "\153\041\225\042\175\043\151\044\206\045\223\046\167" +
    "\047\145\050\201\051\177\052\231\053\166\054\152\055" +
    "\163\056\173\057\216\060\210\061\214\062\220\063\161" +
    "\064\217\065\165\066\172\067\143\070\171\071\160\072" +
    "\221\073\150\074\213\075\222\076\211\077\226\100\147" +
    "\101\215\102\230\103\233\104\170\105\164\106\156\107" +
    "\224\110\205\111\144\112\207\115\204\116\174\117\232" +
    "\120\203\121\162\122\212\123\154\124\157\125\227\126" +
    "\202\001\002\000\010\003\uff84\016\uff84\021\uff84\001\002" +
    "\000\010\003\uff86\016\uff86\021\uff86\001\002\000\010\003" +
    "\uff85\016\uff85\021\uff85\001\002\000\004\124\246\001\002" +
    "\000\006\003\244\124\245\001\002\000\010\003\uff75\016" +
    "\uff75\021\uff75\001\002\000\010\003\uff77\016\uff77\021\uff77" +
    "\001\002\000\010\003\uff76\016\uff76\021\uff76\001\002\000" +
    "\006\125\254\126\252\001\002\000\010\003\253\125\254" +
    "\126\252\001\002\000\010\003\uff98\016\uff98\021\uff98\001" +
    "\002\000\010\003\uff1a\016\uff1a\021\uff1a\001\002\000\010" +
    "\003\uff96\016\uff96\021\uff96\001\002\000\010\003\uff1b\016" +
    "\uff1b\021\uff1b\001\002\000\010\003\uff97\016\uff97\021\uff97" +
    "\001\002\000\160\035\146\037\155\040\153\041\225\042" +
    "\175\043\151\044\206\045\223\046\167\047\145\050\201" +
    "\051\177\052\231\053\166\054\152\055\163\056\173\057" +
    "\216\060\210\061\214\062\220\063\161\064\217\065\165" +
    "\066\172\067\143\070\171\071\160\072\221\073\150\074" +
    "\213\075\222\076\211\077\226\100\147\101\215\102\230" +
    "\103\233\104\170\105\164\106\156\107\224\110\205\111" +
    "\144\112\207\115\204\116\174\117\232\120\203\121\162" +
    "\122\212\123\154\124\157\125\227\126\202\001\002\000" +
    "\162\003\260\035\146\037\155\040\153\041\225\042\175" +
    "\043\151\044\206\045\223\046\167\047\145\050\201\051" +
    "\177\052\231\053\166\054\152\055\163\056\173\057\216" +
    "\060\210\061\214\062\220\063\161\064\217\065\165\066" +
    "\172\067\143\070\171\071\160\072\221\073\150\074\213" +
    "\075\222\076\211\077\226\100\147\101\215\102\230\103" +
    "\233\104\170\105\164\106\156\107\224\110\205\111\144" +
    "\112\207\115\204\116\174\117\232\120\203\121\162\122" +
    "\212\123\154\124\157\125\227\126\202\001\002\000\010" +
    "\003\uff9c\016\uff9c\021\uff9c\001\002\000\010\003\uff9e\016" +
    "\uff9e\021\uff9e\001\002\000\010\003\uff9d\016\uff9d\021\uff9d" +
    "\001\002\000\004\124\267\001\002\000\006\003\265\124" +
    "\266\001\002\000\010\003\uff87\016\uff87\021\uff87\001\002" +
    "\000\010\003\uff89\016\uff89\021\uff89\001\002\000\010\003" +
    "\uff88\016\uff88\021\uff88\001\002\000\062\003\100\042\077" +
    "\046\067\047\054\050\103\051\101\052\126\053\066\056" +
    "\076\057\117\060\111\061\120\066\075\067\050\070\072" +
    "\101\116\102\123\103\127\104\071\105\064\106\060\107" +
    "\121\110\104\114\062\001\002\000\006\003\uffa7\016\uffa7" +
    "\001\002\000\160\035\146\037\155\040\153\041\225\042" +
    "\175\043\151\044\206\045\223\046\167\047\145\050\201" +
    "\051\177\052\231\053\166\054\152\055\163\056\173\057" +
    "\216\060\210\061\214\062\220\063\161\064\217\065\165" +
    "\066\172\067\143\070\171\071\160\072\221\073\150\074" +
    "\213\075\222\076\211\077\226\100\147\101\215\102\230" +
    "\103\233\104\170\105\164\106\156\107\224\110\205\111" +
    "\144\112\207\115\204\116\174\117\232\120\203\121\162" +
    "\122\212\123\154\124\157\125\227\126\202\001\002\000" +
    "\162\003\274\035\146\037\155\040\153\041\225\042\175" +
    "\043\151\044\206\045\223\046\167\047\145\050\201\051" +
    "\177\052\231\053\166\054\152\055\163\056\173\057\216" +
    "\060\210\061\214\062\220\063\161\064\217\065\165\066" +
    "\172\067\143\070\171\071\160\072\221\073\150\074\213" +
    "\075\222\076\211\077\226\100\147\101\215\102\230\103" +
    "\233\104\170\105\164\106\156\107\224\110\205\111\144" +
    "\112\207\115\204\116\174\117\232\120\203\121\162\122" +
    "\212\123\154\124\157\125\227\126\202\001\002\000\010" +
    "\003\uff99\016\uff99\021\uff99\001\002\000\010\003\uff9b\016" +
    "\uff9b\021\uff9b\001\002\000\010\003\uff9a\016\uff9a\021\uff9a" +
    "\001\002\000\160\035\146\037\155\040\153\041\225\042" +
    "\175\043\151\044\206\045\223\046\167\047\145\050\201" +
    "\051\177\052\231\053\166\054\152\055\163\056\173\057" +
    "\216\060\210\061\214\062\220\063\161\064\217\065\165" +
    "\066\172\067\143\070\171\071\160\072\221\073\150\074" +
    "\213\075\222\076\211\077\226\100\147\101\215\102\230" +
    "\103\233\104\170\105\164\106\156\107\224\110\205\111" +
    "\144\112\207\115\204\116\174\117\232\120\203\121\162" +
    "\122\212\123\154\124\157\125\227\126\202\001\002\000" +
    "\162\003\301\035\146\037\155\040\153\041\225\042\175" +
    "\043\151\044\206\045\223\046\167\047\145\050\201\051" +
    "\177\052\231\053\166\054\152\055\163\056\173\057\216" +
    "\060\210\061\214\062\220\063\161\064\217\065\165\066" +
    "\172\067\143\070\171\071\160\072\221\073\150\074\213" +
    "\075\222\076\211\077\226\100\147\101\215\102\230\103" +
    "\233\104\170\105\164\106\156\107\224\110\205\111\144" +
    "\112\207\115\204\116\174\117\232\120\203\121\162\122" +
    "\212\123\154\124\157\125\227\126\202\001\002\000\010" +
    "\003\uff72\016\uff72\021\uff72\001\002\000\010\003\uff74\016" +
    "\uff74\021\uff74\001\002\000\010\003\uff73\016\uff73\021\uff73" +
    "\001\002\000\160\035\146\037\155\040\153\041\225\042" +
    "\175\043\151\044\206\045\223\046\167\047\145\050\201" +
    "\051\177\052\231\053\166\054\152\055\163\056\173\057" +
    "\216\060\210\061\214\062\220\063\161\064\217\065\165" +
    "\066\172\067\143\070\171\071\160\072\221\073\150\074" +
    "\213\075\222\076\211\077\226\100\147\101\215\102\230" +
    "\103\233\104\170\105\164\106\156\107\224\110\205\111" +
    "\144\112\207\115\204\116\174\117\232\120\203\121\162" +
    "\122\212\123\154\124\157\125\227\126\202\001\002\000" +
    "\162\003\306\035\146\037\155\040\153\041\225\042\175" +
    "\043\151\044\206\045\223\046\167\047\145\050\201\051" +
    "\177\052\231\053\166\054\152\055\163\056\173\057\216" +
    "\060\210\061\214\062\220\063\161\064\217\065\165\066" +
    "\172\067\143\070\171\071\160\072\221\073\150\074\213" +
    "\075\222\076\211\077\226\100\147\101\215\102\230\103" +
    "\233\104\170\105\164\106\156\107\224\110\205\111\144" +
    "\112\207\115\204\116\174\117\232\120\203\121\162\122" +
    "\212\123\154\124\157\125\227\126\202\001\002\000\010" +
    "\003\uff69\016\uff69\021\uff69\001\002\000\010\003\uff6b\016" +
    "\uff6b\021\uff6b\001\002\000\010\003\uff6a\016\uff6a\021\uff6a" +
    "\001\002\000\004\037\315\001\002\000\006\003\313\037" +
    "\314\001\002\000\010\003\uff66\016\uff66\021\uff66\001\002" +
    "\000\010\003\uff68\016\uff68\021\uff68\001\002\000\010\003" +
    "\uff67\016\uff67\021\uff67\001\002\000\004\037\322\001\002" +
    "\000\006\003\320\037\321\001\002\000\010\003\uffc1\016" +
    "\uffc1\021\uffc1\001\002\000\010\003\uffc3\016\uffc3\021\uffc3" +
    "\001\002\000\010\003\uffc2\016\uffc2\021\uffc2\001\002\000" +
    "\004\113\327\001\002\000\006\003\326\113\325\001\002" +
    "\000\010\003\uffa1\016\uffa1\021\uffa1\001\002\000\010\003" +
    "\uff9f\016\uff9f\021\uff9f\001\002\000\010\003\uffa0\016\uffa0" +
    "\021\uffa0\001\002\000\160\035\146\037\155\040\153\041" +
    "\225\042\175\043\151\044\206\045\223\046\167\047\145" +
    "\050\201\051\177\052\231\053\166\054\152\055\163\056" +
    "\173\057\216\060\210\061\214\062\220\063\161\064\217" +
    "\065\165\066\172\067\143\070\171\071\160\072\221\073" +
    "\150\074\213\075\222\076\211\077\226\100\147\101\215" +
    "\102\230\103\233\104\170\105\164\106\156\107\224\110" +
    "\205\111\144\112\207\115\204\116\174\117\232\120\203" +
    "\121\162\122\212\123\154\124\157\125\227\126\202\001" +
    "\002\000\162\003\332\035\146\037\155\040\153\041\225" +
    "\042\175\043\151\044\206\045\223\046\167\047\145\050" +
    "\201\051\177\052\231\053\166\054\152\055\163\056\173" +
    "\057\216\060\210\061\214\062\220\063\161\064\217\065" +
    "\165\066\172\067\143\070\171\071\160\072\221\073\150" +
    "\074\213\075\222\076\211\077\226\100\147\101\215\102" +
    "\230\103\233\104\170\105\164\106\156\107\224\110\205" +
    "\111\144\112\207\115\204\116\174\117\232\120\203\121" +
    "\162\122\212\123\154\124\157\125\227\126\202\001\002" +
    "\000\010\003\uff90\016\uff90\021\uff90\001\002\000\010\003" +
    "\uff92\016\uff92\021\uff92\001\002\000\010\003\uff91\016\uff91" +
    "\021\uff91\001\002\000\022\071\342\072\337\073\347\074" +
    "\345\075\340\076\350\077\346\100\344\001\002\000\024" +
    "\003\343\071\342\072\337\073\347\074\345\075\340\076" +
    "\350\077\346\100\344\001\002\000\010\003\uff28\016\uff28" +
    "\021\uff28\001\002\000\010\003\uff25\016\uff25\021\uff25\001" +
    "\002\000\010\003\uff8c\016\uff8c\021\uff8c\001\002\000\010" +
    "\003\uff29\016\uff29\021\uff29\001\002\000\010\003\uff8a\016" +
    "\uff8a\021\uff8a\001\002\000\010\003\uff22\016\uff22\021\uff22" +
    "\001\002\000\010\003\uff26\016\uff26\021\uff26\001\002\000" +
    "\010\003\uff23\016\uff23\021\uff23\001\002\000\010\003\uff27" +
    "\016\uff27\021\uff27\001\002\000\010\003\uff24\016\uff24\021" +
    "\uff24\001\002\000\010\003\uff8b\016\uff8b\021\uff8b\001\002" +
    "\000\004\121\360\001\002\000\010\003\354\121\355\122" +
    "\357\001\002\000\010\003\uff7e\016\uff7e\021\uff7e\001\002" +
    "\000\010\003\uff1d\016\uff1d\021\uff1d\001\002\000\010\003" +
    "\uff80\016\uff80\021\uff80\001\002\000\010\003\uff1c\016\uff1c" +
    "\021\uff1c\001\002\000\010\003\uff7f\016\uff7f\021\uff7f\001" +
    "\002\000\160\035\146\037\155\040\153\041\225\042\175" +
    "\043\151\044\206\045\223\046\167\047\145\050\201\051" +
    "\177\052\231\053\166\054\152\055\163\056\173\057\216" +
    "\060\210\061\214\062\220\063\161\064\217\065\165\066" +
    "\172\067\143\070\171\071\160\072\221\073\150\074\213" +
    "\075\222\076\211\077\226\100\147\101\215\102\230\103" +
    "\233\104\170\105\164\106\156\107\224\110\205\111\144" +
    "\112\207\115\204\116\174\117\232\120\203\121\162\122" +
    "\212\123\154\124\157\125\227\126\202\001\002\000\162" +
    "\003\363\035\146\037\155\040\153\041\225\042\175\043" +
    "\151\044\206\045\223\046\167\047\145\050\201\051\177" +
    "\052\231\053\166\054\152\055\163\056\173\057\216\060" +
    "\210\061\214\062\220\063\161\064\217\065\165\066\172" +
    "\067\143\070\171\071\160\072\221\073\150\074\213\075" +
    "\222\076\211\077\226\100\147\101\215\102\230\103\233" +
    "\104\170\105\164\106\156\107\224\110\205\111\144\112" +
    "\207\115\204\116\174\117\232\120\203\121\162\122\212" +
    "\123\154\124\157\125\227\126\202\001\002\000\010\003" +
    "\uff6f\016\uff6f\021\uff6f\001\002\000\010\003\uff71\016\uff71" +
    "\021\uff71\001\002\000\010\003\uff70\016\uff70\021\uff70\001" +
    "\002\000\160\035\146\037\155\040\153\041\225\042\175" +
    "\043\151\044\206\045\223\046\167\047\145\050\201\051" +
    "\177\052\231\053\166\054\152\055\163\056\173\057\216" +
    "\060\210\061\214\062\220\063\161\064\217\065\165\066" +
    "\172\067\143\070\171\071\160\072\221\073\150\074\213" +
    "\075\222\076\211\077\226\100\147\101\215\102\230\103" +
    "\233\104\170\105\164\106\156\107\224\110\205\111\144" +
    "\112\207\115\204\116\174\117\232\120\203\121\162\122" +
    "\212\123\154\124\157\125\227\126\202\001\002\000\162" +
    "\003\370\035\146\037\155\040\153\041\225\042\175\043" +
    "\151\044\206\045\223\046\167\047\145\050\201\051\177" +
    "\052\231\053\166\054\152\055\163\056\173\057\216\060" +
    "\210\061\214\062\220\063\161\064\217\065\165\066\172" +
    "\067\143\070\171\071\160\072\221\073\150\074\213\075" +
    "\222\076\211\077\226\100\147\101\215\102\230\103\233" +
    "\104\170\105\164\106\156\107\224\110\205\111\144\112" +
    "\207\115\204\116\174\117\232\120\203\121\162\122\212" +
    "\123\154\124\157\125\227\126\202\001\002\000\010\003" +
    "\uffc4\016\uffc4\021\uffc4\001\002\000\010\003\uffc6\016\uffc6" +
    "\021\uffc6\001\002\000\010\003\uffc5\016\uffc5\021\uffc5\001" +
    "\002\000\004\123\377\001\002\000\006\003\375\123\376" +
    "\001\002\000\010\003\uff7b\016\uff7b\021\uff7b\001\002\000" +
    "\010\003\uff7d\016\uff7d\021\uff7d\001\002\000\010\003\uff7c" +
    "\016\uff7c\021\uff7c\001\002\000\160\035\146\037\155\040" +
    "\153\041\225\042\175\043\151\044\206\045\223\046\167" +
    "\047\145\050\201\051\177\052\231\053\166\054\152\055" +
    "\163\056\173\057\216\060\210\061\214\062\220\063\161" +
    "\064\217\065\165\066\172\067\143\070\171\071\160\072" +
    "\221\073\150\074\213\075\222\076\211\077\226\100\147" +
    "\101\215\102\230\103\233\104\170\105\164\106\156\107" +
    "\224\110\205\111\144\112\207\115\204\116\174\117\232" +
    "\120\203\121\162\122\212\123\154\124\157\125\227\126" +
    "\202\001\002\000\162\003\u0102\035\146\037\155\040\153" +
    "\041\225\042\175\043\151\044\206\045\223\046\167\047" +
    "\145\050\201\051\177\052\231\053\166\054\152\055\163" +
    "\056\173\057\216\060\210\061\214\062\220\063\161\064" +
    "\217\065\165\066\172\067\143\070\171\071\160\072\221" +
    "\073\150\074\213\075\222\076\211\077\226\100\147\101" +
    "\215\102\230\103\233\104\170\105\164\106\156\107\224" +
    "\110\205\111\144\112\207\115\204\116\174\117\232\120" +
    "\203\121\162\122\212\123\154\124\157\125\227\126\202" +
    "\001\002\000\010\003\uff93\016\uff93\021\uff93\001\002\000" +
    "\010\003\uff95\016\uff95\021\uff95\001\002\000\010\003\uff94" +
    "\016\uff94\021\uff94\001\002\000\004\124\u0109\001\002\000" +
    "\006\003\u0107\124\u0108\001\002\000\010\003\uff78\016\uff78" +
    "\021\uff78\001\002\000\010\003\uff7a\016\uff7a\021\uff7a\001" +
    "\002\000\010\003\uff79\016\uff79\021\uff79\001\002\000\160" +
    "\035\146\037\155\040\153\041\225\042\175\043\151\044" +
    "\206\045\223\046\167\047\145\050\201\051\177\052\231" +
    "\053\166\054\152\055\163\056\173\057\216\060\210\061" +
    "\214\062\220\063\161\064\217\065\165\066\172\067\143" +
    "\070\171\071\160\072\221\073\150\074\213\075\222\076" +
    "\211\077\226\100\147\101\215\102\230\103\233\104\170" +
    "\105\164\106\156\107\224\110\205\111\144\112\207\115" +
    "\204\116\174\117\232\120\203\121\162\122\212\123\154" +
    "\124\157\125\227\126\202\001\002\000\162\003\u010c\035" +
    "\146\037\155\040\153\041\225\042\175\043\151\044\206" +
    "\045\223\046\167\047\145\050\201\051\177\052\231\053" +
    "\166\054\152\055\163\056\173\057\216\060\210\061\214" +
    "\062\220\063\161\064\217\065\165\066\172\067\143\070" +
    "\171\071\160\072\221\073\150\074\213\075\222\076\211" +
    "\077\226\100\147\101\215\102\230\103\233\104\170\105" +
    "\164\106\156\107\224\110\205\111\144\112\207\115\204" +
    "\116\174\117\232\120\203\121\162\122\212\123\154\124" +
    "\157\125\227\126\202\001\002\000\010\003\uff6c\016\uff6c" +
    "\021\uff6c\001\002\000\010\003\uff6e\016\uff6e\021\uff6e\001" +
    "\002\000\010\003\uff6d\016\uff6d\021\uff6d\001\002\000\004" +
    "\020\u0110\001\002\000\004\016\u0111\001\002\000\006\003" +
    "\u0112\013\u0114\001\002\000\004\005\u011e\001\002\000\010" +
    "\002\uffa5\003\uffa5\013\uffa5\001\002\000\006\003\u0116\005" +
    "\u0115\001\002\000\006\003\u0119\022\u011a\001\002\000\004" +
    "\022\u0117\001\002\000\004\014\u0118\001\002\000\010\002" +
    "\uff63\003\uff63\013\uff63\001\002\000\004\014\u011d\001\002" +
    "\000\006\003\u011c\014\u011b\001\002\000\010\002\uff65\003" +
    "\uff65\013\uff65\001\002\000\010\002\uff61\003\uff61\013\uff61" +
    "\001\002\000\010\002\uff62\003\uff62\013\uff62\001\002\000" +
    "\004\022\u011f\001\002\000\004\014\u0120\001\002\000\010" +
    "\002\uff64\003\uff64\013\uff64\001\002\000\004\056\u0125\001" +
    "\002\000\006\003\u0124\113\u0123\001\002\000\010\003\uff8f" +
    "\016\uff8f\021\uff8f\001\002\000\010\003\uff8d\016\uff8d\021" +
    "\uff8d\001\002\000\010\003\uff8e\016\uff8e\021\uff8e\001\002" +
    "\000\006\003\u0127\016\u0128\001\002\000\004\020\u0131\001" +
    "\002\000\006\003\u0129\020\u012a\001\002\000\004\016\u012f" +
    "\001\002\000\006\003\u012b\016\u012c\001\002\000\006\003" +
    "\u0112\013\u0114\001\002\000\006\003\u0112\013\u0114\001\002" +
    "\000\010\002\uffa6\003\uffa6\013\uffa6\001\002\000\010\002" +
    "\uffa2\003\uffa2\013\uffa2\001\002\000\006\003\u0112\013\u0114" +
    "\001\002\000\010\002\uffa3\003\uffa3\013\uffa3\001\002\000" +
    "\004\016\u0132\001\002\000\006\003\u0112\013\u0114\001\002" +
    "\000\010\002\uffa4\003\uffa4\013\uffa4\001\002\000\006\003" +
    "\u0139\012\u013a\001\002\000\004\012\u0136\001\002\000\004" +
    "\017\u0137\001\002\000\006\003\046\015\045\001\002\000" +
    "\010\002\uffd4\003\uffd4\013\uffd4\001\002\000\004\017\u013f" +
    "\001\002\000\006\003\u013b\017\u013c\001\002\000\006\003" +
    "\046\015\045\001\002\000\006\003\046\015\045\001\002" +
    "\000\010\002\uffd6\003\uffd6\013\uffd6\001\002\000\010\002" +
    "\uffd2\003\uffd2\013\uffd2\001\002\000\006\003\046\015\045" +
    "\001\002\000\010\002\uffd3\003\uffd3\013\uffd3\001\002\000" +
    "\010\002\uffeb\003\uffeb\013\uffeb\001\002\000\006\003\u0146" +
    "\015\u0144\001\002\000\006\003\u0146\015\u0144\001\002\000" +
    "\004\055\u014b\001\002\000\010\002\uffe4\003\uffe4\013\uffe4" +
    "\001\002\000\004\055\u0147\001\002\000\004\012\u0148\001" +
    "\002\000\004\017\u0149\001\002\000\006\003\046\015\045" +
    "\001\002\000\010\002\uffd0\003\uffd0\013\uffd0\001\002\000" +
    "\006\003\u014c\012\u014d\001\002\000\004\017\u0152\001\002" +
    "\000\006\003\u014e\017\u014f\001\002\000\006\003\046\015" +
    "\045\001\002\000\006\003\046\015\045\001\002\000\010" +
    "\002\uffd1\003\uffd1\013\uffd1\001\002\000\010\002\uffce\003" +
    "\uffce\013\uffce\001\002\000\006\003\046\015\045\001\002" +
    "\000\010\002\uffcf\003\uffcf\013\uffcf\001\002\000\010\002" +
    "\uffe2\003\uffe2\013\uffe2\001\002\000\006\003\u0146\015\u0144" +
    "\001\002\000\006\003\u0146\015\u0144\001\002\000\010\002" +
    "\uffde\003\uffde\013\uffde\001\002\000\010\002\uffdf\003\uffdf" +
    "\013\uffdf\001\002\000\006\003\u015e\015\u015b\001\002\000" +
    "\010\002\uffec\003\uffec\013\uffec\001\002\000\012\003\u0135" +
    "\041\u0134\055\u014b\065\u0163\001\002\000\010\002\uffe3\003" +
    "\uffe3\013\uffe3\001\002\000\010\002\uffdc\003\uffdc\013\uffdc" +
    "\001\002\000\010\041\041\055\u0147\065\u015f\001\002\000" +
    "\004\012\u0160\001\002\000\004\017\u0161\001\002\000\006" +
    "\003\046\015\045\001\002\000\010\002\uffcc\003\uffcc\013" +
    "\uffcc\001\002\000\006\003\u0164\012\u0165\001\002\000\004" +
    "\017\u016a\001\002\000\006\003\u0166\017\u0167\001\002\000" +
    "\006\003\046\015\045\001\002\000\006\003\046\015\045" +
    "\001\002\000\010\002\uffcd\003\uffcd\013\uffcd\001\002\000" +
    "\010\002\uffca\003\uffca\013\uffca\001\002\000\006\003\046" +
    "\015\045\001\002\000\010\002\uffcb\003\uffcb\013\uffcb\001" +
    "\002\000\006\003\u0170\015\u016e\001\002\000\006\003\u0170" +
    "\015\u016e\001\002\000\004\065\u0163\001\002\000\010\002" +
    "\uffd9\003\uffd9\013\uffd9\001\002\000\004\065\u015f\001\002" +
    "\000\010\002\uffda\003\uffda\013\uffda\001\002\000\006\003" +
    "\040\015\037\001\002\000\006\003\040\015\037\001\002" +
    "\000\010\002\uffe7\003\uffe7\013\uffe7\001\002\000\010\002" +
    "\uffe8\003\uffe8\013\uffe8\001\002\000\006\003\040\015\037" +
    "\001\002\000\006\003\040\015\037\001\002\000\010\002" +
    "\uffe6\003\uffe6\013\uffe6\001\002\000\010\002\uffe5\003\uffe5" +
    "\013\uffe5\001\002\000\006\003\u0146\015\u0144\001\002\000" +
    "\006\003\u0146\015\u0144\001\002\000\010\002\uffe1\003\uffe1" +
    "\013\uffe1\001\002\000\010\002\uffe0\003\uffe0\013\uffe0\001" +
    "\002\000\006\003\u0170\015\u016e\001\002\000\006\003\u0170" +
    "\015\u016e\001\002\000\010\002\uffd7\003\uffd7\013\uffd7\001" +
    "\002\000\010\002\uffd8\003\uffd8\013\uffd8\001\002\000\006" +
    "\003\u0170\015\u016e\001\002\000\006\003\u0170\015\u016e\001" +
    "\002\000\010\002\uffdb\003\uffdb\013\uffdb\001\002\000\010" +
    "\002\uffdd\003\uffdd\013\uffdd\001\002\000\006\003\040\015" +
    "\037\001\002\000\006\003\040\015\037\001\002\000\010" +
    "\002\uffe9\003\uffe9\013\uffe9\001\002\000\010\002\uffea\003" +
    "\uffea\013\uffea\001\002\000\006\003\ufffe\013\ufffe\001\002" +
    "\000\006\003\ufffa\013\ufffa\001\002\000\030\003\030\040" +
    "\033\043\020\044\026\045\025\054\032\062\023\063\031" +
    "\064\021\111\027\112\022\001\002\000\030\003\030\040" +
    "\033\043\020\044\026\045\025\054\032\062\023\063\031" +
    "\064\021\111\027\112\022\001\002\000\010\002\ufff2\003" +
    "\ufff2\013\ufff2\001\002\000\010\002\uffee\003\uffee\013\uffee" +
    "\001\002\000\004\012\u0193\001\002\000\004\014\u0192\001" +
    "\002\000\006\003\ufffc\013\ufffc\001\002\000\030\003\030" +
    "\040\033\043\020\044\026\045\025\054\032\062\023\063" +
    "\031\064\021\111\027\112\022\001\002\000\010\002\ufff0" +
    "\003\ufff0\013\ufff0\001\002\000\006\004\u0196\006\u0197\001" +
    "\002\000\004\012\u0199\001\002\000\004\014\u0198\001\002" +
    "\000\006\003\ufffd\013\ufffd\001\002\000\030\003\030\040" +
    "\033\043\020\044\026\045\025\054\032\062\023\063\031" +
    "\064\021\111\027\112\022\001\002\000\010\002\ufff1\003" +
    "\ufff1\013\ufff1\001\002\000\004\022\u01b2\001\002\000\006" +
    "\003\u01a2\013\u01a4\001\002\000\006\003\u019f\022\u01a0\001" +
    "\002\000\006\003\ufff4\013\ufff4\001\002\000\004\004\u0190" +
    "\001\002\000\006\003\u01a1\004\013\001\002\000\004\012" +
    "\017\001\002\000\004\022\u01af\001\002\000\004\002\uffff" +
    "\001\002\000\006\003\u01a6\022\u01a7\001\002\000\006\003" +
    "\ufff3\013\ufff3\001\002\000\006\004\u0190\007\u01ad\001\002" +
    "\000\010\003\u01a9\004\013\007\u01a8\001\002\000\006\003" +
    "\u01ac\014\u01ab\001\002\000\006\012\017\014\u01aa\001\002" +
    "\000\004\002\ufff6\001\002\000\004\002\ufff9\001\002\000" +
    "\004\002\ufff5\001\002\000\004\014\u01ae\001\002\000\004" +
    "\002\ufff7\001\002\000\006\004\u0196\007\u01b0\001\002\000" +
    "\004\014\u01b1\001\002\000\004\002\ufff8\001\002\000\004" +
    "\004\u0196\001\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u01b1\000\010\002\003\003\007\011\004\001\001\000" +
    "\002\001\001\000\006\003\u019d\005\u019b\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\006\023\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\007" +
    "\u0140\001\001\000\004\007\035\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\010\043\001\001\000\002\001\001" +
    "\000\064\013\104\014\046\015\124\016\114\017\u0125\020" +
    "\056\021\064\022\073\023\050\025\113\026\106\027\062" +
    "\030\105\031\055\032\072\033\112\034\121\035\107\036" +
    "\101\037\067\040\054\041\051\042\111\043\123\044\060" +
    "\001\001\000\064\013\104\014\046\015\124\016\114\017" +
    "\052\020\056\021\064\022\073\023\050\025\113\026\106" +
    "\027\062\030\105\031\055\032\072\033\112\034\121\035" +
    "\107\036\101\037\067\040\054\041\051\042\111\043\123" +
    "\044\060\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\050\137\001\001\000\004" +
    "\050\136\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\046\233\001\001\000" +
    "\004\046\177\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\046\240\001\001\000\004\046\237" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\052\254\001" +
    "\001\000\004\052\250\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\046\261\001\001\000\004\046\260\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\064\013\104\014\046\015" +
    "\124\016\114\017\270\020\056\021\064\022\073\023\050" +
    "\025\113\026\106\027\062\030\105\031\055\032\072\033" +
    "\112\034\121\035\107\036\101\037\067\040\054\041\051" +
    "\042\111\043\123\044\060\001\001\000\002\001\001\000" +
    "\004\046\275\001\001\000\004\046\274\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\046" +
    "\302\001\001\000\004\046\301\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\046\307\001" +
    "\001\000\004\046\306\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\046\333\001\001\000\004\046\332\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\047\350\001\001\000\004\047\340\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\051\355\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\046\364\001\001" +
    "\000\004\046\363\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\046\371\001\001\000\004" +
    "\046\370\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\046" +
    "\u0103\001\001\000\004\046\u0102\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\046\u010d\001\001\000\004\046\u010c\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\004\u0112\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\004" +
    "\u012d\001\001\000\004\004\u012c\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\004\u012f\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\004\u0132\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\010\u0137\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\010\u013d\001\001\000" +
    "\004\010\u013c\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\010\u013f\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\024\u0153\001\001\000\004\024\u0144\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\010\u0149\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\010\u0150\001\001\000\004\010\u014f" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\010" +
    "\u0152\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\024\u0157\001\001\000\004\024\u0156\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\007\u0159\024\u015b\045\u015c" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\010\u0161\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\010\u0168\001\001\000\004\010\u0167\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\010\u016a\001\001" +
    "\000\002\001\001\000\004\045\u0170\001\001\000\004\045" +
    "\u016e\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\007\u0174\001\001\000" +
    "\004\007\u0173\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\007\u0178\001\001\000\004\007\u0177\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\024\u017c\001\001" +
    "\000\004\024\u017b\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\045\u0180\001\001\000\004\045\u017f\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\045\u0184\001" +
    "\001\000\004\045\u0183\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\007\u0188\001\001\000\004\007\u0187\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\006\u018e\001\001\000\004\006" +
    "\u018d\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\006" +
    "\u0193\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\006" +
    "\u0199\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\003\u01a4\012\u01a2\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$FormsParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$FormsParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$FormsParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




	private Symbol cur_token;
	private UserContainer u;
	private User usuario;

	public FormsParser(FormsLex lex) {
		super(lex);
		this.u = new UserContainer();
	}

	/* Constructor sin cambiar nombre */
	// public parser(FormsLex lex) {
	// 	super(lex);
	// 	this.parsed = true;
	// 	u = new UserContainer();
	// }

	public void report_fatal_error(String message, Object info) {

        //System.out.println("report_fatal_error");
        //System.out.println("Message: " + message);
        //System.out.println("Object info: " + info);

        /* Armando reportes de errores */
        // List<String> expected = new ArrayList<>();
        // List<Integer> tokens = expected_token_ids();
        // for(Integer i : tokens) {
        //     expected.add(symbl_name_from_id(i));
        // }

		// this.u.setError(this.cur_token, symbl_name_from_id(this.cur_token.sym), expected);
	}

	public void syntax_error(Symbol cur_token) {
        List<String> expected = new ArrayList<>();

        this.cur_token = cur_token;
		//Token t = (Token) cur_token.value;
        //System.out.printf("syntax_error: %s, %s\n", symbl_name_from_id(cur_token.sym), t.toString());

        List<Integer> tokens = expected_token_ids();
        // System.out.print("Se esperaba ->");
        for(Integer i : tokens) {
			//System.out.printf("%s, ", symbl_name_from_id(i));
            expected.add(symbl_name_from_id(i));
        }
        //System.out.println("");

		/* Reporte de Errores */
		this.u.setError(cur_token, symbl_name_from_id(cur_token.sym), expected);
	}

	protected int error_sync_size() {
		return 1;
	}

	public boolean isParsed() {
		return u.getErrors().isEmpty();
	}

	public UserContainer getContainer() {
		return u;
	}



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$FormsParser$actions {
  private final FormsParser parser;

  /** Constructor */
  CUP$FormsParser$actions(FormsParser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$FormsParser$do_action_part00000000(
    int                        CUP$FormsParser$act_num,
    java_cup.runtime.lr_parser CUP$FormsParser$parser,
    java.util.Stack            CUP$FormsParser$stack,
    int                        CUP$FormsParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$FormsParser$result;

      /* select the action based on the action number */
      switch (CUP$FormsParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // solicitude ::= ini_sol 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("solicitude",0, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= solicitude EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-1)).value;
		RESULT = start_val;
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-1)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$FormsParser$parser.done_parsing();
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // solicitude ::= ini_many sol fin_many 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("solicitude",0, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // ini_many ::= SMALLER EXCL INIT_MANY_SOL GREATER 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("ini_many",7, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ini_many ::= error EXCL INIT_MANY_SOL GREATER 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("ini_many",7, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ini_many ::= SMALLER error INIT_MANY_SOL GREATER 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("ini_many",7, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ini_many ::= SMALLER EXCL error GREATER 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("ini_many",7, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ini_many ::= SMALLER EXCL INIT_MANY_SOL error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("ini_many",7, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // fin_many ::= SMALLER EXCL FIN_MANY_SOL GREATER 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("fin_many",8, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // fin_many ::= error EXCL FIN_MANY_SOL GREATER 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("fin_many",8, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // fin_many ::= SMALLER error FIN_MANY_SOL GREATER 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("fin_many",8, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // fin_many ::= SMALLER EXCL error GREATER 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("fin_many",8, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // fin_many ::= SMALLER EXCL FIN_MANY_SOL error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("fin_many",8, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // sol ::= ini_sol 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("sol",3, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // sol ::= sol ini_sol 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("sol",3, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-1)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // ini_sol ::= SMALLER EXCL INIT_SOL COLON request 
            {
              Object RESULT =null;
		int qleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)).left;
		int qright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)).right;
		Token q = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)).value;
		int rleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		
					u.setResult(q, (String) r);
				
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("ini_sol",1, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // ini_sol ::= error EXCL INIT_SOL COLON request 
            {
              Object RESULT =null;
		int qleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)).left;
		int qright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)).right;
		Token q = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)).value;
		int rleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setResult((Token) q, (String) r); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("ini_sol",1, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // ini_sol ::= SMALLER error INIT_SOL COLON request 
            {
              Object RESULT =null;
		int qleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)).left;
		int qright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)).right;
		Token q = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)).value;
		int rleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setResult(q, (String) r); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("ini_sol",1, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // ini_sol ::= SMALLER EXCL error COLON request 
            {
              Object RESULT =null;
		int qleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)).left;
		int qright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)).right;
		Token q = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)).value;
		int rleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setResult(q, (String) r); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("ini_sol",1, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // ini_sol ::= SMALLER EXCL INIT_SOL error request 
            {
              Object RESULT =null;
		int qleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)).left;
		int qright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)).right;
		Token q = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)).value;
		int rleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setResult(q, (String) r); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("ini_sol",1, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // request ::= ADD_USER GREATER req_u 
            {
              Object RESULT =null;
		 RESULT = "CREAR"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // request ::= error GREATER req_u 
            {
              Object RESULT =null;
		 RESULT = "CREAR"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // request ::= ADD_USER error req_u 
            {
              Object RESULT =null;
		 RESULT = "CREAR"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // request ::= EDIT_USER GREATER req_u 
            {
              Object RESULT =null;
		 RESULT = "EDIT"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // request ::= EDIT_USER error req_u 
            {
              Object RESULT =null;
		 RESULT = "EDIT"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // request ::= DEL_USER GREATER req_u 
            {
              Object RESULT =null;
		 RESULT = "DELETE"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // request ::= DEL_USER error req_u 
            {
              Object RESULT =null;
		 RESULT = "DELETE"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // request ::= LOGIN GREATER req_u 
            {
              Object RESULT =null;
		 RESULT = "LOGIN"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // request ::= LOGIN error req_u 
            {
              Object RESULT =null;
		 RESULT = "LOGIN"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // request ::= NEW_FORM GREATER forms 
            {
              Object RESULT =null;
		 RESULT = "NUEVO_FORMULARIO"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // request ::= error GREATER forms 
            {
              Object RESULT =null;
		 RESULT = "NUEVO_FORMULARIO"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // request ::= NEW_FORM error forms 
            {
              Object RESULT =null;
		 RESULT = "NUEVO_FORMULARIO"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // request ::= DEL_FORM GREATER forms 
            {
              Object RESULT =null;
		 RESULT = "ELIMINAR_FORMULARIO"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // request ::= DEL_FORM error forms 
            {
              Object RESULT =null;
		 RESULT = "ELIMINAR_FORMULARIO"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // request ::= EDIT_FORM GREATER forms 
            {
              Object RESULT =null;
		 RESULT = "MODIFICAR_FORMULARIO"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // request ::= EDIT_FORM error forms 
            {
              Object RESULT =null;
		 RESULT = "MODIFICAR_FORMULARIO"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // request ::= ADD_COMP GREATER comp 
            {
              Object RESULT =null;
		 RESULT = "AGREGAR_COMPONENTE"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // request ::= error GREATER comp 
            {
              Object RESULT =null;
		 RESULT = "AGREGAR_COMPONENTE"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // request ::= ADD_COMP error comp 
            {
              Object RESULT =null;
		 RESULT = "AGREGAR_COMPONENTE"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // request ::= DEL_COMP GREATER comp 
            {
              Object RESULT =null;
		 RESULT = "ELIMINAR_COMPONENTE"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // request ::= DEL_COMP error comp 
            {
              Object RESULT =null;
		 RESULT = "ELIMINAR_COMPONENTE"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // request ::= EDIT_COMP GREATER comp 
            {
              Object RESULT =null;
		 RESULT = "MODIFICAR_COMPONENTE"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // request ::= EDIT_COMP error comp 
            {
              Object RESULT =null;
		 RESULT = "MODIFICAR_COMPONENTE"; 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("request",4, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // req_u ::= LBRACE CRED COLON LBRACKET body 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("req_u",5, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // req_u ::= error CRED COLON LBRACKET body 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("req_u",5, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // req_u ::= LBRACE error COLON LBRACKET body 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("req_u",5, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // req_u ::= LBRACE CRED error LBRACKET body 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("req_u",5, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // req_u ::= LBRACE CRED COLON error body 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("req_u",5, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // forms ::= LBRACE PARAM_F COLON LBRACKET body 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("forms",18, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // forms ::= error PARAM_F COLON LBRACKET body 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("forms",18, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // forms ::= LBRACE PARAM_F error LBRACKET body 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("forms",18, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // forms ::= LBRACE PARAM_F COLON error body 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("forms",18, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // comp ::= LBRACE PARAM_C COLON LBRACKET body 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("comp",35, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // comp ::= error PARAM_C COLON LBRACKET body 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("comp",35, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // comp ::= LBRACE PARAM_C error LBRACKET body 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("comp",35, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // comp ::= LBRACE PARAM_C COLON error body 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("comp",35, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-4)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // us ::= USER COLON str_param 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		
					u.setNewParam(a, p, "USUARIO");
					// System.out.println("USUARIO");
				
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("us",9, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // us ::= USER error str_param 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("us",9, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // us ::= USER COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("us",9, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // pass ::= PASS COLON str_param 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		
					u.setNewParam(a, p, "PASSWORD");
					// System.out.println("PASSWORD");
				
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("pass",10, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // pass ::= PASS error str_param 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("pass",10, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // pass ::= PASS COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("pass",10, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // date ::= DATE_ADD COLON DATE 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		
					u.setNewParam(a, p.getValue(), "FECHA_CREACION");
					// System.out.println("FECHA_CREACION");
				
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("date",11, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // date ::= DATE_ADD error DATE 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("date",11, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // date ::= DATE_ADD COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("date",11, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // add_u ::= us 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // add_u ::= pass 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // add_u ::= date 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // add_u ::= old_u 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // add_u ::= new_u 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // add_u ::= new_p 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // add_u ::= e_date 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // add_u ::= id 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // add_u ::= title 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // add_u ::= name 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // add_u ::= theme 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // add_u ::= user_c 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // add_u ::= field_n 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // add_u ::= form 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // add_u ::= kind 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // add_u ::= index 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // add_u ::= text 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // add_u ::= kind_a 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // add_u ::= req 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // add_u ::= opt 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // add_u ::= rows 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // add_u ::= columns 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // add_u ::= url 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // add_u ::= error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add_u",12, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // add ::= add_u 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add",13, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // add ::= add_u COMMA add 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("add",13, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // body ::= LBRACE add RBRACE RBRACKET RBRACE fin_sol 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("body",6, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-5)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // body ::= error add RBRACE RBRACKET RBRACE fin_sol 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("body",6, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-5)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // body ::= LBRACE add error RBRACKET RBRACE fin_sol 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("body",6, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-5)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // body ::= LBRACE add RBRACE error RBRACE fin_sol 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("body",6, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-5)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // body ::= LBRACE add RBRACE RBRACKET error fin_sol 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("body",6, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-5)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // id ::= ID COLON ID_ 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p.getValue(), "ID"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("id",19, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // id ::= ID error ID_ 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("id",19, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // id ::= ID COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("id",19, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // title ::= TITLE COLON str_param 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p, "TITULO"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("title",20, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // title ::= TITLE error str_param 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("title",20, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // title ::= TITLE COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("title",20, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // name ::= NAME COLON str_param 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p, "NOMBRE"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("name",21, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // name ::= NAME error str_param 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("name",21, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // name ::= NAME COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("name",21, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // theme ::= THEME COLON kind_t 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p, "TEMA"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("theme",22, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // theme ::= THEME error kind_t 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("theme",22, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // theme ::= THEME COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("theme",22, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // user_c ::= USER_C COLON str_param 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p, "USUARIO_CREACION"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("user_c",23, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // user_c ::= USER_C error str_param 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("user_c",23, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // user_c ::= USER_C COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("user_c",23, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // field_n ::= FIELD_N COLON str_param 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p, "NOMBRE_CAMPO"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("field_n",24, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // field_n ::= FIELD_N error str_param 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("field_n",24, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // field_n ::= FIELD_N COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("field_n",24, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // form ::= FORM COLON ID_ 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p.getValue(), "FORMULARIO"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("form",25, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // form ::= FORM error ID 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("form",25, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // form ::= FORM COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("form",25, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // kind ::= CLASS COLON class_o 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p, "CLASE"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("kind",26, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // kind ::= CLASS error class_o 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("kind",26, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // kind ::= CLASS COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("kind",26, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // index ::= INDEX COLON STR_NUMBER 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p.getValue(), "INDICE"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("index",27, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // index ::= INDEX error STR_NUMBER 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("index",27, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // index ::= INDEX COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("index",27, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // text ::= TEXT COLON str_param 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p, "TEXTO_VISIBLE"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("text",28, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // text ::= TEXT error str_param 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("text",28, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // text ::= TEXT COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("text",28, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // kind_a ::= ALIGN COLON align 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p, "ALINEACION"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("kind_a",31, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // kind_a ::= ALIGN error align 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("kind_a",31, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // kind_a ::= ALIGN COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("kind_a",31, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // req ::= REQUIRED COLON required 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p, "REQUERIDO"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("req",32, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // req ::= REQUIRED error YES 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("req",32, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // req ::= REQUIRED COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("req",32, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // opt ::= OPTION COLON OPTION_V 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p.getValue(), "OPCIONES"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("opt",29, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // opt ::= OPTION error OPTION_V 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("opt",29, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // opt ::= OPTION COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("opt",29, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // rows ::= ROWS COLON STR_NUMBER 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p.getValue(), "FILAS"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("rows",33, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // rows ::= ROWS error STR_NUMBER 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("rows",33, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // rows ::= ROWS COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("rows",33, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // columns ::= COLUMNS COLON STR_NUMBER 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p.getValue(), "COLUMNAS"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("columns",34, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // columns ::= COLUMNS error STR_NUMBER 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("columns",34, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // columns ::= COLUMNS COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("columns",34, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // url ::= URL COLON str_param 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 u.setNewParam(a, p, "URL"); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("url",30, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // url ::= URL error str_param 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("url",30, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // url ::= URL COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("url",30, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // old_u ::= OLD_USER COLON str_param 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		
					u.setNewParam(a, p, "USUARIO_ANTIGUO");
					// System.out.println("USUARIO_ANTIGUO");
				
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("old_u",14, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // old_u ::= OLD_USER error str_param 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("old_u",14, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // old_u ::= OLD_USER COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("old_u",14, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // new_u ::= NEW_USER COLON str_param 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		
					u.setNewParam(a, p, "USUARIO_NUEVO");
					// System.out.println("USUARIO_NUEVO");
				
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("new_u",15, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // new_u ::= NEW_USER error str_param 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("new_u",15, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // new_u ::= NEW_USER COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("new_u",15, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // new_p ::= NEW_PASS COLON str_param 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		
					u.setNewParam(a, p, "NUEVO_PASSWORD");
					// System.out.println("NUEVO_PASSWORD");
				
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("new_p",16, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // new_p ::= NEW_PASS error str_param 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("new_p",16, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // new_p ::= NEW_PASS COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("new_p",16, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // e_date ::= DATE_MOD COLON DATE 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		
					u.setNewParam(a, p.getValue(), "FECHA_MODIFICACION");
					// System.out.println("FECHA_MODIFICACION");
				
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("e_date",17, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // e_date ::= DATE_MOD error DATE 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("e_date",17, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // e_date ::= DATE_MOD COLON error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("e_date",17, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-2)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // fin_sol ::= SMALLER FIN_SOL EXCL GREATER 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("fin_sol",2, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // fin_sol ::= error FIN_SOL EXCL GREATER 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("fin_sol",2, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // fin_sol ::= SMALLER error EXCL GREATER 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("fin_sol",2, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // fin_sol ::= SMALLER FIN_SOL error GREATER 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("fin_sol",2, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // fin_sol ::= SMALLER FIN_SOL EXCL error 
            {
              Object RESULT =null;

              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("fin_sol",2, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.elementAt(CUP$FormsParser$top-3)), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // str_param ::= STR 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // str_param ::= DATE 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // str_param ::= ADD_USER 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // str_param ::= CRED 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // str_param ::= USER 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // str_param ::= PASS 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // str_param ::= DATE_ADD 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // str_param ::= EDIT_USER 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // str_param ::= DEL_USER 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // str_param ::= LOGIN 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // str_param ::= OLD_USER 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // str_param ::= NEW_USER 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // str_param ::= NEW_PASS 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // str_param ::= DATE_MOD 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // str_param ::= NEW_FORM 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // str_param ::= PARAM_F 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // str_param ::= ID 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // str_param ::= TITLE 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // str_param ::= NAME 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // str_param ::= THEME 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // str_param ::= DEL_FORM 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // str_param ::= EDIT_FORM 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // str_param ::= ADD_COMP 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // str_param ::= PARAM_C 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // str_param ::= FIELD_N 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // str_param ::= FORM 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // str_param ::= CLASS 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // str_param ::= TEXT_FIELD 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // str_param ::= TEXT_AREA 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // str_param ::= CHECKBOX 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // str_param ::= RADIO 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // str_param ::= FILE 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // str_param ::= IMG 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // str_param ::= COMBO 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // str_param ::= BTN 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // str_param ::= INDEX 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // str_param ::= TEXT 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // str_param ::= ALIGN 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // str_param ::= REQUIRED 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // str_param ::= OPTION 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // str_param ::= ROWS 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // str_param ::= COLUMNS 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // str_param ::= URL 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // str_param ::= DEL_COMP 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // str_param ::= EDIT_COMP 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // str_param ::= CENTER 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // str_param ::= LEFT 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // str_param ::= RIGHT 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // str_param ::= JUSTIFY 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // str_param ::= YES 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // str_param ::= NO 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // str_param ::= OPTION_V 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // str_param ::= STR_NUMBER 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // str_param ::= DARK 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // str_param ::= LIGHT 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("str_param",36, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // class_o ::= TEXT_FIELD 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("class_o",37, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // class_o ::= TEXT_AREA 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("class_o",37, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // class_o ::= CHECKBOX 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("class_o",37, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // class_o ::= RADIO 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("class_o",37, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // class_o ::= FILE 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("class_o",37, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // class_o ::= IMG 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("class_o",37, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // class_o ::= COMBO 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("class_o",37, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // class_o ::= BTN 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("class_o",37, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // align ::= CENTER 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("align",38, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // align ::= LEFT 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("align",38, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // align ::= RIGHT 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("align",38, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // align ::= JUSTIFY 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("align",38, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // required ::= YES 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("required",39, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // required ::= NO 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("required",39, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // kind_t ::= DARK 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("kind_t",40, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // kind_t ::= LIGHT 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$FormsParser$stack.peek()).value;
		 RESULT = p.getValue(); 
              CUP$FormsParser$result = parser.getSymbolFactory().newSymbol("kind_t",40, ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$FormsParser$stack.peek()), RESULT);
            }
          return CUP$FormsParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$FormsParser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$FormsParser$do_action(
    int                        CUP$FormsParser$act_num,
    java_cup.runtime.lr_parser CUP$FormsParser$parser,
    java.util.Stack            CUP$FormsParser$stack,
    int                        CUP$FormsParser$top)
    throws java.lang.Exception
    {
              return CUP$FormsParser$do_action_part00000000(
                               CUP$FormsParser$act_num,
                               CUP$FormsParser$parser,
                               CUP$FormsParser$stack,
                               CUP$FormsParser$top);
    }
}

}
