package com.cesar31.formsclient.ui;

import com.cesar31.formsclient.control.FileControl;
import com.cesar31.formsclient.control.Request;
import com.cesar31.formsclient.model.ErrorResponse;
import com.cesar31.formsclient.model.Response;
import java.awt.Event;
import java.util.List;
import javax.swing.Action;
import javax.swing.JFileChooser;
import javax.swing.KeyStroke;
import javax.swing.text.DefaultEditorKit;

/**
 *
 * @author cesar31
 */
public class MainView extends javax.swing.JFrame {

    private FileControl control;

    // Para control de lineas
    private LineNumber num;
    private LineNumber numResponse;
    private Request request;

    public MainView() {
        initComponents();
        initLineNumber();
        textMainSetActions();
        control = new FileControl();

        request = new Request();
    }

    /**
     * Numero de linea para JTextArea
     */
    private void initLineNumber() {
        // Editor para usuario
        num = new LineNumber(textMain);
        scrollText.setRowHeaderView(num);

        // JTextArea para respuestas del servidor
        numResponse = new LineNumber(textResponse);
        scrollResponse.setRowHeaderView(numResponse);

        // No Editable
        textResponse.setEditable(false);
    }

    /**
     * Acciones de cortar, copiar y pegar en textMain
     */
    private void textMainSetActions() {
        Action cut = textMain.getActionMap().get(DefaultEditorKit.cutAction);
        cut.putValue(Action.NAME, "Cortar");
        cut.putValue(Action.ACCELERATOR_KEY, KeyStroke.getAWTKeyStroke('X', Event.CTRL_MASK));

        Action copy = textMain.getActionMap().get(DefaultEditorKit.copyAction);
        copy.putValue(Action.NAME, "Copiar");
        copy.putValue(Action.ACCELERATOR_KEY, KeyStroke.getAWTKeyStroke('C', Event.CTRL_MASK));

        Action paste = textMain.getActionMap().get(DefaultEditorKit.pasteAction);
        paste.putValue(Action.NAME, "Pegar");
        paste.putValue(Action.ACCELERATOR_KEY, KeyStroke.getAWTKeyStroke('V', Event.CTRL_MASK));

        // Agregar a los menu 
        ItemCut.setAction(cut);
        ItemCopy.setAction(copy);
        ItemPaste.setAction(paste);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        myTabbedPane = new javax.swing.JTabbedPane();
        mainPanel = new javax.swing.JPanel();
        scrollText = new javax.swing.JScrollPane();
        textMain = new javax.swing.JTextArea();
        btnRequest = new javax.swing.JButton();
        labelSol1 = new javax.swing.JLabel();
        labelInfo = new javax.swing.JLabel();
        paneResponse = new javax.swing.JPanel();
        scrollResponse = new javax.swing.JScrollPane();
        textResponse = new javax.swing.JTextArea();
        labelResponse = new javax.swing.JLabel();
        panelResponseMain = new javax.swing.JPanel();
        labelResponseMain = new javax.swing.JLabel();
        scrollMain = new javax.swing.JScrollPane();
        scroll = new javax.swing.JScrollPane();
        responseTable = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        menu1 = new javax.swing.JMenu();
        itemOpen = new javax.swing.JMenuItem();
        itemGuardar = new javax.swing.JMenuItem();
        itemExit = new javax.swing.JMenuItem();
        menu2 = new javax.swing.JMenu();
        ItemCut = new javax.swing.JMenuItem();
        ItemCopy = new javax.swing.JMenuItem();
        ItemPaste = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(36, 27, 47));
        setMinimumSize(new java.awt.Dimension(1024, 720));
        setPreferredSize(new java.awt.Dimension(1024, 720));
        setResizable(false);

        myTabbedPane.setBackground(new java.awt.Color(23, 21, 32));
        myTabbedPane.setForeground(new java.awt.Color(0, 0, 0));
        myTabbedPane.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N

        mainPanel.setBackground(new java.awt.Color(23, 21, 32));
        mainPanel.setForeground(new java.awt.Color(255, 255, 255));
        mainPanel.setMinimumSize(new java.awt.Dimension(1024, 688));
        mainPanel.setName(""); // NOI18N

        textMain.setBackground(new java.awt.Color(42, 33, 57));
        textMain.setColumns(20);
        textMain.setFont(new java.awt.Font("Hack", 0, 16)); // NOI18N
        textMain.setForeground(new java.awt.Color(255, 255, 255));
        textMain.setRows(5);
        textMain.setTabSize(4);
        textMain.setCaretColor(new java.awt.Color(255, 255, 255));
        textMain.setMargin(new java.awt.Insets(10, 10, 10, 10));
        textMain.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                textMainCaretUpdate(evt);
            }
        });
        scrollText.setViewportView(textMain);

        btnRequest.setBackground(new java.awt.Color(42, 33, 57));
        btnRequest.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        btnRequest.setForeground(new java.awt.Color(255, 255, 255));
        btnRequest.setText("Enviar Peticion");
        btnRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestActionPerformed(evt);
            }
        });

        labelSol1.setBackground(new java.awt.Color(23, 21, 32));
        labelSol1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        labelSol1.setForeground(new java.awt.Color(255, 255, 255));
        labelSol1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelSol1.setText("Solicitudes de Usuario");
        labelSol1.setMaximumSize(new java.awt.Dimension(250, 30));
        labelSol1.setMinimumSize(new java.awt.Dimension(250, 30));
        labelSol1.setPreferredSize(new java.awt.Dimension(250, 30));

        labelInfo.setBackground(new java.awt.Color(23, 21, 32));
        labelInfo.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        labelInfo.setForeground(new java.awt.Color(255, 255, 255));
        labelInfo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelInfo.setText("Linea -, Columna -");
        labelInfo.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        labelInfo.setMaximumSize(new java.awt.Dimension(250, 30));
        labelInfo.setMinimumSize(new java.awt.Dimension(250, 30));
        labelInfo.setPreferredSize(new java.awt.Dimension(250, 30));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scrollText, javax.swing.GroupLayout.PREFERRED_SIZE, 975, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(btnRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(404, 404, 404)
                        .addComponent(labelSol1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(labelSol1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollText, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRequest)
                    .addComponent(labelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(79, Short.MAX_VALUE))
        );

        myTabbedPane.addTab("Peticiones", mainPanel);

        paneResponse.setBackground(new java.awt.Color(23, 21, 32));
        paneResponse.setForeground(new java.awt.Color(255, 255, 255));
        paneResponse.setMinimumSize(new java.awt.Dimension(1024, 688));
        paneResponse.setName(""); // NOI18N

        textResponse.setBackground(new java.awt.Color(42, 33, 57));
        textResponse.setColumns(20);
        textResponse.setFont(new java.awt.Font("Hack", 0, 16)); // NOI18N
        textResponse.setForeground(new java.awt.Color(255, 255, 255));
        textResponse.setRows(5);
        textResponse.setTabSize(4);
        textResponse.setCaretColor(new java.awt.Color(255, 255, 255));
        textResponse.setMargin(new java.awt.Insets(10, 10, 10, 10));
        textResponse.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                textResponseCaretUpdate(evt);
            }
        });
        scrollResponse.setViewportView(textResponse);

        labelResponse.setBackground(new java.awt.Color(23, 21, 32));
        labelResponse.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        labelResponse.setForeground(new java.awt.Color(255, 255, 255));
        labelResponse.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelResponse.setText("Respuesta del Servidor(Indigo)");
        labelResponse.setMaximumSize(new java.awt.Dimension(250, 30));
        labelResponse.setMinimumSize(new java.awt.Dimension(250, 30));
        labelResponse.setPreferredSize(new java.awt.Dimension(250, 30));

        javax.swing.GroupLayout paneResponseLayout = new javax.swing.GroupLayout(paneResponse);
        paneResponse.setLayout(paneResponseLayout);
        paneResponseLayout.setHorizontalGroup(
            paneResponseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneResponseLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(scrollResponse, javax.swing.GroupLayout.PREFERRED_SIZE, 975, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneResponseLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelResponse, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(356, 356, 356))
        );
        paneResponseLayout.setVerticalGroup(
            paneResponseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneResponseLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(labelResponse, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollResponse, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        myTabbedPane.addTab("Respuesta", paneResponse);

        panelResponseMain.setBackground(new java.awt.Color(23, 21, 32));
        panelResponseMain.setForeground(new java.awt.Color(255, 255, 255));
        panelResponseMain.setMinimumSize(new java.awt.Dimension(1024, 688));
        panelResponseMain.setName(""); // NOI18N

        labelResponseMain.setBackground(new java.awt.Color(23, 21, 32));
        labelResponseMain.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        labelResponseMain.setForeground(new java.awt.Color(255, 255, 255));
        labelResponseMain.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelResponseMain.setText("Respuestas del Servidor");
        labelResponseMain.setMaximumSize(new java.awt.Dimension(250, 30));
        labelResponseMain.setMinimumSize(new java.awt.Dimension(250, 30));
        labelResponseMain.setPreferredSize(new java.awt.Dimension(250, 30));

        scrollMain.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N

        scroll.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        scroll.setPreferredSize(new java.awt.Dimension(2600, 540));

        responseTable.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        responseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        responseTable.setMinimumSize(new java.awt.Dimension(2600, 540));
        responseTable.setPreferredSize(new java.awt.Dimension(2600, 540));
        responseTable.setRowHeight(40);
        scroll.setViewportView(responseTable);

        scrollMain.setViewportView(scroll);

        javax.swing.GroupLayout panelResponseMainLayout = new javax.swing.GroupLayout(panelResponseMain);
        panelResponseMain.setLayout(panelResponseMainLayout);
        panelResponseMainLayout.setHorizontalGroup(
            panelResponseMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelResponseMainLayout.createSequentialGroup()
                .addContainerGap(367, Short.MAX_VALUE)
                .addComponent(labelResponseMain, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(356, 356, 356))
            .addGroup(panelResponseMainLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(scrollMain, javax.swing.GroupLayout.PREFERRED_SIZE, 948, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelResponseMainLayout.setVerticalGroup(
            panelResponseMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResponseMainLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(labelResponseMain, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollMain, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        myTabbedPane.addTab("Respuesta", panelResponseMain);

        menuBar.setBackground(new java.awt.Color(36, 27, 47));
        menuBar.setForeground(new java.awt.Color(255, 255, 255));
        menuBar.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        menuBar.setMinimumSize(new java.awt.Dimension(70, 32));
        menuBar.setPreferredSize(new java.awt.Dimension(70, 32));

        menu1.setBackground(new java.awt.Color(36, 27, 47));
        menu1.setForeground(new java.awt.Color(255, 255, 255));
        menu1.setText("File");
        menu1.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N

        itemOpen.setBackground(new java.awt.Color(36, 27, 47));
        itemOpen.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        itemOpen.setForeground(new java.awt.Color(255, 255, 255));
        itemOpen.setText("Abrir");
        itemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemOpenActionPerformed(evt);
            }
        });
        menu1.add(itemOpen);

        itemGuardar.setBackground(new java.awt.Color(36, 27, 47));
        itemGuardar.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        itemGuardar.setForeground(new java.awt.Color(255, 255, 255));
        itemGuardar.setText("Guardar");
        menu1.add(itemGuardar);

        itemExit.setBackground(new java.awt.Color(36, 27, 47));
        itemExit.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        itemExit.setForeground(new java.awt.Color(255, 255, 255));
        itemExit.setText("Exit");
        itemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemExitActionPerformed(evt);
            }
        });
        menu1.add(itemExit);

        menuBar.add(menu1);

        menu2.setBackground(new java.awt.Color(36, 27, 47));
        menu2.setForeground(new java.awt.Color(255, 255, 255));
        menu2.setText("Edit");
        menu2.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N

        ItemCut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ItemCut.setBackground(new java.awt.Color(36, 27, 47));
        ItemCut.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        ItemCut.setForeground(new java.awt.Color(255, 255, 255));
        ItemCut.setText("Cortar");
        menu2.add(ItemCut);

        ItemCopy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ItemCopy.setBackground(new java.awt.Color(36, 27, 47));
        ItemCopy.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        ItemCopy.setForeground(new java.awt.Color(255, 255, 255));
        ItemCopy.setText("Copiar");
        menu2.add(ItemCopy);

        ItemPaste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ItemPaste.setBackground(new java.awt.Color(36, 27, 47));
        ItemPaste.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        ItemPaste.setForeground(new java.awt.Color(255, 255, 255));
        ItemPaste.setText("Pegar");
        menu2.add(ItemPaste);

        menuBar.add(menu2);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myTabbedPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Evento para cerrar el programa
     *
     * @param evt
     */
    private void itemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemExitActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_itemExitActionPerformed

    private void btnRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestActionPerformed
        // TODO add your handling code here:
        String input = textMain.getText();
        request.sendRequest(input);

        String response = request.getServerResponse();
        textResponse.setText(response);

        if (request.isErrors()) {
            List<ErrorResponse> errors = request.getList();
            setTableErrors(errors);
        } else {
            List<Response> responses = request.getList();
            setTableResponses(responses);
        }

        myTabbedPane.setSelectedIndex(2);

//        String input = control.readData("response.indigo");
//
//        ResponseLex lex = new ResponseLex(new StringReader(input));
//        ResponseParser parser = new ResponseParser(lex);
//        try {
//            parser.parse();
//            List<ErrorResponse> e = parser.getHandle().getList();
//            setTableErrors(e);
//        } catch (Exception ex) {
//            ex.printStackTrace(System.out);
//        }

    }//GEN-LAST:event_btnRequestActionPerformed

    private void setTableErrors(List<ErrorResponse> errors) {
        String[][] list = new String[errors.size()][5];
        for (int i = 0; i < errors.size(); i++) {
            list[i][0] = errors.get(i).getLexema();
            list[i][1] = errors.get(i).getType();
            list[i][2] = String.valueOf(errors.get(i).getLine());
            list[i][3] = String.valueOf(errors.get(i).getColumn());
            list[i][4] = errors.get(i).getDescription();
        }
        responseTable.setPreferredSize(new java.awt.Dimension(2600, 40 * errors.size()));
        responseTable.setModel(new javax.swing.table.DefaultTableModel(
                list,
                new String[]{
                    "Lexema", "Tipo", "Linea", "Columna", "Descripcion"
                }
        ));
        setSizeTable();

    }

    /**
     * Tabla para Response
     *
     * @param res
     */
    private void setTableResponses(List<Response> res) {
        String[][] list = new String[res.size()][5];
        for (int i = 0; i < res.size(); i++) {
            list[i][0] = String.valueOf(res.get(i).getNumberRequest());
            list[i][1] = String.valueOf(res.get(i).getLine());
            list[i][2] = String.valueOf(res.get(i).getColumn());
            list[i][3] = res.get(i).getTypeRequest();
            list[i][4] = res.get(i).getMessage();
        }
        responseTable.setPreferredSize(new java.awt.Dimension(2600, 40 * res.size()));
        responseTable.setModel(new javax.swing.table.DefaultTableModel(
                list,
                new String[]{
                    "Número", "Linea", "Columna", "Tipo", "Mensaje"
                }
        ));
        setSizeTable();

    }

    private void setSizeTable() {
        responseTable.getColumnModel().getColumn(0).setMinWidth(100);
        responseTable.getColumnModel().getColumn(0).setPreferredWidth(100);
        responseTable.getColumnModel().getColumn(0).setMaxWidth(100);
        responseTable.getColumnModel().getColumn(1).setMinWidth(100);
        responseTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        responseTable.getColumnModel().getColumn(1).setMaxWidth(100);
        responseTable.getColumnModel().getColumn(2).setMinWidth(100);
        responseTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        responseTable.getColumnModel().getColumn(2).setMaxWidth(100);
        responseTable.getColumnModel().getColumn(3).setMinWidth(175);
        responseTable.getColumnModel().getColumn(3).setPreferredWidth(175);
        responseTable.getColumnModel().getColumn(3).setMaxWidth(175);
        responseTable.getColumnModel().getColumn(4).setMinWidth(2225);
        responseTable.getColumnModel().getColumn(4).setPreferredWidth(2225);
        responseTable.getColumnModel().getColumn(4).setMaxWidth(2225);
    }

    /**
     * Obtener informacion de linea y columna
     *
     * @param evt
     */
    private void textMainCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_textMainCaretUpdate
        // TODO add your handling code here:
        String info = control.lineAndColumnInfo(textMain);
        labelInfo.setText(info);
    }//GEN-LAST:event_textMainCaretUpdate

    private void itemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemOpenActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int seleccion = fileChooser.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            String text = control.readData(fileChooser.getSelectedFile().getAbsolutePath());
            textMain.setText(text);
        }

        myTabbedPane.setSelectedIndex(0);
    }//GEN-LAST:event_itemOpenActionPerformed

    private void textResponseCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_textResponseCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_textResponseCaretUpdate

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ItemCopy;
    private javax.swing.JMenuItem ItemCut;
    private javax.swing.JMenuItem ItemPaste;
    private javax.swing.JButton btnRequest;
    private javax.swing.JMenuItem itemExit;
    private javax.swing.JMenuItem itemGuardar;
    private javax.swing.JMenuItem itemOpen;
    private javax.swing.JLabel labelInfo;
    private javax.swing.JLabel labelResponse;
    private javax.swing.JLabel labelResponseMain;
    private javax.swing.JLabel labelSol1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenu menu1;
    private javax.swing.JMenu menu2;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTabbedPane myTabbedPane;
    private javax.swing.JPanel paneResponse;
    private javax.swing.JPanel panelResponseMain;
    private javax.swing.JTable responseTable;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JScrollPane scrollMain;
    private javax.swing.JScrollPane scrollResponse;
    private javax.swing.JScrollPane scrollText;
    private javax.swing.JTextArea textMain;
    private javax.swing.JTextArea textResponse;
    // End of variables declaration//GEN-END:variables
}
